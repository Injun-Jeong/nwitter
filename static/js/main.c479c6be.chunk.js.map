{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","message","success","signInWithEmailAndPassword","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","then","console","log","catch","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","info","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c479c6be.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { message } from \"antd\";\r\n\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const { target: { name, value } } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        } else if (name === \"passwordConfirm\") {\r\n            setPasswordConfirm(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                if (password != passwordConfirm) {\r\n                    setError(\"비밀번호가 일치하지 않습니다.\");\r\n                    return;\r\n                }\r\n                await authService.createUserWithEmailAndPassword(email, password);\r\n                return message.success(\"계정이 성공적으로 생성되었습니다.\");\r\n            } else {\r\n                await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name=\"email\" type=\"email\" placeholder=\"E-mail\" required value={email} onChange={onChange} className=\"authInput\" />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\r\n                {\r\n                    newAccount && (\r\n                        <input name=\"passwordConfirm\" type=\"password\" placeholder=\"Password Confirm\" required value={password} onChange={onChange} className=\"authInput\" />\r\n                    )\r\n                }\r\n                <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"회원가입\" : \"로그인\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\" >\r\n                {newAccount ? \"이미 등록된 계정이 있으신가요?\" : \"새로운 계정을 등록하시나요?\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);    // newNweet은 text이다.\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you wnat to delete this nweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n\r\n            /* injun */\r\n            if (nweetObj.attachmentUrl != \"\") {\r\n                //const attachmentRef = storageService.ref().child(`${nweetObj.creatorId}/${nweetObj.}`);\r\n                const attachmentRef = storageService.refFromURL(nweetObj.attachmentUrl);\r\n                // Delete the file\r\n                attachmentRef.delete().then(function () {\r\n                    // File deleted successfully\r\n                    console.log(\"success delete!!!\");\r\n                }).catch(function (error) {\r\n                    // Uh-oh, an error occurred!\r\n                    console.log(\"..? what happend?\");\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value }, } = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n              </span>\r\n                </>\r\n            ) : (\r\n                    <>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                            <div class=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    console.info(\"여기는 홈\");\r\n\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(() => {\r\n        dbService\r\n            .collection(\"nweets\")\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n                const nweetArray = snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                }));\r\n                setNweets(nweetArray);\r\n            });\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    console.info(\"여기는 프로필\");\r\n\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n      </span>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n        <li>\r\n            <Link to=\"/\" style={{ marginLeft: 10\r\n                }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                \r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n                to=\"/profile\"\r\n                style={{ marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                }}\r\n            >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    {userObj.displayName\r\n                        ? `${userObj.displayName}의 Profile`\r\n                        : \"Profile\"}\r\n                </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>;\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    console.info(\"여기는 앱 라우터\");\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div\r\n                        style={{\r\n                            maxWidth: 890,\r\n                            width: \"100%\",\r\n                            margin: \"0 auto\",\r\n                            marginTop: 80,\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                        <>\r\n                            <Route exact path=\"/\">\r\n                                <Auth />\r\n                            </Route>\r\n                        </>\r\n                    )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    })\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <div className=\"app__container\">\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : \"Initializing...\"}\n      <footer>&copy; Injun Jeong {new Date().getFullYear()}</footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}