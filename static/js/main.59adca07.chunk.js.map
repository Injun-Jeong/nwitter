{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","alert","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","then","console","log","catch","toggleEditing","update","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","welcomeMessage","PLACEHOLDER","Boolean","displayNmae","Math","floor","random","length","warn","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","info","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","data","marginTop","refreshUser","PLACEHOLDER_NAME","history","useHistory","displayName","newDisplayName","setNewDisplayName","photoURL","setPhotoURL","updateProfile","profileImgUrl","imgRef","alt","faUserCircle","htmlFor","signOut","push","Navigation","to","marginLeft","display","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAcAA,IAASC,cATc,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKJ,IAAMM,EAAmBT,IACnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,UC8CxBC,EA5DE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACZC,EADY,KACLC,EADK,OAEaF,mBAAS,IAFtB,mBAEZG,EAFY,KAEFC,EAFE,OAG2BJ,mBAAS,IAHpC,mBAGZK,EAHY,KAGKC,EAHL,OAIiBN,oBAAS,GAJ1B,mBAIZO,EAJY,KAIAC,EAJA,OAKOR,mBAAS,IALhB,mBAKZS,EALY,KAKLC,EALK,KAObC,EAAW,SAACC,GAAW,IAAD,EACYA,EAA5BC,OAAUC,EADM,EACNA,KAAMC,EADA,EACAA,MACX,UAATD,EACAZ,EAASa,GACO,aAATD,EACPV,EAAYW,GACI,oBAATD,GACPR,EAAmBS,IAIrBC,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACbL,EAAMM,iBADO,UAGLX,EAHK,oBAIDJ,GAAYE,EAJX,yCAKMc,MAAM,sFALZ,uBAOC1B,EAAY2B,+BAA+BnB,EAAOE,GAPnD,gCAQEgB,MAAM,kGARR,yBAUC1B,EAAY4B,2BAA2BpB,EAAOE,GAV/C,0DAaTO,EAAS,KAAMY,SAbN,0DAAH,sDAsBd,OACI,qCACI,uBAAMN,SAAUA,EAAUO,UAAU,YAApC,UACI,uBAAOT,KAAK,QAAQU,KAAK,QAAQC,YAAY,SAASC,UAAQ,EAACX,MAAOd,EAAOU,SAAUA,EAAUY,UAAU,cAC3G,uBAAOT,KAAK,WAAWU,KAAK,WAAWC,YAAY,WAAWC,UAAQ,EAACX,MAAOZ,EAAUQ,SAAUA,EAAUY,UAAU,cAElHhB,GACI,uBAAOO,KAAK,kBAAkBU,KAAK,WAAWC,YAAY,mBAAmBC,UAAQ,EAACX,MAAOV,EAAiBM,SAAUA,EAAUY,UAAU,cAGpJ,uBAAOC,KAAK,SAASD,UAAU,uBAAuBR,MAAOR,EAAa,2BAAS,uBAClFE,GAAS,sBAAMc,UAAU,YAAhB,SAA6Bd,OAE3C,sBAAMkB,QAlBQ,WAClBjB,EAAS,IACTF,GAAc,SAACoB,GAAD,OAAWA,MAgBSL,UAAU,aAAxC,SACKhB,EAAa,qFAAsB,oFChBrCsB,EAjCF,WACX,IAAMC,EAAa,uCAAG,WAAOlB,GAAP,iBAAAK,EAAA,4DAKP,YAHDH,EACRF,EADFC,OAAUC,MAIViB,EAAW,IAAIvC,EAAiBE,KAAKsC,mBACnB,WAATlB,IACTiB,EAAW,IAAIvC,EAAiBE,KAAKuC,oBARnB,SAUdxC,EAAYyC,gBAAgBH,GAVd,2CAAH,sDAYnB,OACE,sBAAKR,UAAU,gBAAf,UACE,cAAC,IAAD,CACEY,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAAEC,aAAc,MAEzB,cAAC,EAAD,IACA,sBAAKjB,UAAU,WAAf,UACE,yBAAQI,QAASG,EAAehB,KAAK,SAASS,UAAU,UAAxD,kCACuB,cAAC,IAAD,CAAiBY,KAAMM,SAE9C,yBAAQd,QAASG,EAAehB,KAAK,SAASS,UAAU,UAAxD,kCACuB,cAAC,IAAD,CAAiBY,KAAMO,gB,gBCiDvCC,EAhFD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACP7C,oBAAS,GADF,mBAC9B8C,EAD8B,KACrBC,EADqB,OAEL/C,mBAAS4C,EAASI,MAFb,mBAE9BC,EAF8B,KAEpBC,EAFoB,KAI/BC,EAAa,uCAAG,sBAAAlC,EAAA,0DACPmC,OAAOC,QAAQ,+CADR,gCAGR1D,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMC,SAH/B,OAMgB,IAA1BZ,EAASa,eAEa5D,EAAe6D,WAAWd,EAASa,eAE3CD,SAASG,MAAK,WAExBC,QAAQC,IAAI,wBACbC,OAAM,SAAUrD,GAEfmD,QAAQC,IAAI,wBAfN,2CAAH,qDAqBbE,EAAgB,kBAAMhB,GAAW,SAACnB,GAAD,OAAWA,MAE5CZ,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACbL,EAAMM,iBADO,SAEPvB,EAAU2D,IAAV,iBAAwBV,EAASW,KAAMS,OAAO,CAChDhB,KAAMC,IAHG,OAKbF,GAAW,GALE,2CAAH,sDAad,OACI,qBAAKxB,UAAU,QAAf,SACKuB,EACG,qCACI,uBAAM9B,SAAUA,EAAUO,UAAU,sBAApC,UACI,uBACIC,KAAK,OACLC,YAAY,kBACZV,MAAOkC,EACPvB,UAAQ,EACRuC,WAAS,EACTtD,SAhBP,SAACC,GAAW,IACPG,EAAaH,EAAvBC,OAAUE,MAClBmC,EAAYnC,IAeQQ,UAAU,cAEd,uBAAOC,KAAK,SAAST,MAAM,eAAeQ,UAAU,eAExD,sBAAMI,QAASoC,EAAexC,UAAU,oBAAxC,uBAKA,qCACI,oBAAIA,UAAU,cAAd,SAA8BqB,EAASI,OACtCJ,EAASa,eAAiB,qBAAKS,IAAKtB,EAASa,gBAC7CZ,GACG,sBAAKsB,MAAM,iBAAX,UACI,sBAAMxC,QAASwB,EAAf,SACI,cAAC,IAAD,CAAiBhB,KAAMiC,QAE3B,sBAAMzC,QAASoC,EAAf,SACI,cAAC,IAAD,CAAiB5B,KAAMkC,iB,gBCyC5CC,EA9GM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACRvE,mBAAS,IADD,mBAC3BwE,EAD2B,KACpBC,EADoB,OAEEzE,mBAAS,IAFX,mBAE3B0E,EAF2B,KAEfC,EAFe,KAG5BC,EAAiB,CACnB,sDACA,gDACA,gDACA,wDAGEC,EAAcC,QAAQP,EAAQQ,aAC9B,0HADc,UAEXH,EAAeI,KAAKC,MAAMD,KAAKE,SAAWN,EAAeO,UAE5DnE,EAAQ,uCAAG,WAAOJ,GAAP,qBAAAK,EAAA,yDACbL,EAAMM,iBACQ,KAAVsD,EAFS,yCAGFlD,IAAQ8D,KAAK,oEAHX,WAIFN,QAAQP,EAAQQ,aAJd,yCAKFzD,IAAQ8D,KAAK,4HALX,UAQT3B,EAAgB,GACD,KAAfiB,EATS,wBAUHW,EAAgBxF,EACjByF,MACAC,MAFiB,UAERhB,EAAQiB,IAFA,YAEOC,gBAZpB,UAacJ,EAAcK,UAAUhB,EAAY,YAblD,eAaHiB,EAbG,iBAcaA,EAASL,IAAIM,iBAd1B,QAcTnC,EAdS,sBAgBPb,EAAW,CACbI,KAAMwB,EACNqB,UAAWC,KAAKC,MAChBC,UAAWzB,EAAQiB,IACnB/B,iBApBS,UAsBP9D,EAAUsG,WAAW,UAAUC,IAAItD,GAtB5B,QAuBb6B,EAAS,IACTE,EAAc,IAxBD,4CAAH,sDAqDd,OACI,uBAAM3D,SAAUA,EAAUO,UAAU,cAApC,UACI,sBAAKA,UAAU,0BAAf,UACI,uBACIA,UAAU,sBACVR,MAAOyD,EACP7D,SAhCC,SAACC,GAAW,IAEXG,EACVH,EADAC,OAAUE,MAEd0D,EAAS1D,IA6BGS,KAAK,OACLC,YAAaoD,EACbsB,UAAW,MAEf,uBAAO3E,KAAK,SAAST,MAAM,SAASQ,UAAU,2BAElD,wBAAO6E,IAAI,cAAc7E,UAAU,sBAAnC,UACI,yEACA,cAAC,IAAD,CAAiBY,KAAMkE,SAE3B,uBACI9C,GAAG,cACH/B,KAAK,OACL8E,OAAO,UACP3F,SAxCS,SAACC,GAAW,IAIvB2F,EADF3F,EADAC,OAAU2F,MAEQ,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IAEdC,EACjBD,EADAE,cAAiBD,OAErBlC,EAAckC,IAEd/B,QAAQyB,IACRE,EAAOM,cAAcR,IA4BjBhE,MAAO,CACHyE,QAAS,KAGhBtC,GACG,sBAAKnD,UAAU,0BAAf,UACI,qBACI2C,IAAKQ,EACLnC,MAAO,CACH0E,gBAAiBvC,KAGzB,sBAAKnD,UAAU,qBAAqBI,QApC1B,kBAAMgD,EAAc,KAoC9B,UACI,0CACA,cAAC,IAAD,CAAiBxC,KAAM+E,gBCzEhCC,EAhCF,SAAC,GAAiB,IAAf5C,EAAc,EAAdA,QACZX,QAAQwD,KAAK,6BADa,MAGEpH,mBAAS,IAHX,mBAGnBqH,EAHmB,KAGXC,EAHW,KAgB1B,OAZAC,qBAAU,WACN5H,EACKsG,WAAW,UACXuB,QAAQ,YAAa,QACrBC,YAAW,SAACC,GACT,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACvE,GAAD,oBACjCC,GAAID,EAAIC,IACLD,EAAIwE,WAEXR,EAAUK,QAEnB,IAEC,sBAAKpG,UAAU,YAAf,UACI,cAAC,EAAD,CAAcgD,QAASA,IAEvB,qBAAKhC,MAAO,CAAEwF,UAAW,IAAzB,SACKV,EAAOQ,KAAI,SAACrD,GAAD,OACR,cAAC,EAAD,CAEI5B,SAAU4B,EACV3B,QAAS2B,EAAMwB,YAAczB,EAAQiB,KAFhChB,EAAMjB,aCpBpB,cAA+B,IAA5ByE,EAA2B,EAA3BA,YAAazD,EAAc,EAAdA,QAC3BX,QAAQwD,KAAK,yCAEb,IAAMa,EAAmB,2FACnBC,EAAUC,cAJyB,EAKGnI,mBAASuE,EAAQ6D,aALpB,mBAKlCC,EALkC,KAKlBC,EALkB,OAMTtI,mBAASuE,EAAQgE,UANR,mBAMlCA,EANkC,KAMxBC,EANwB,KAoBnCxH,EAAQ,uCAAG,WAAOJ,GAAP,mBAAAK,EAAA,yDACbL,EAAMM,iBACA4D,QAAQuD,GAFD,yCAGFlH,MAAM8G,IAHJ,UAMP1D,EAAQ6D,cAAgBC,GAAoBE,IAAahE,EAAQgE,SAN1D,yCAOFpH,MAAM,oEAPJ,UAWToD,EAAQ6D,cAAgBC,EAXf,gCAYH9D,EAAQkE,cAAR,2BACClE,GADD,IAEF6D,YAAaC,KAdR,OAgBTL,IAhBS,WAoBTlD,QAAQyD,IAAcA,IAAahE,EAAQgE,SApBlC,wBAsBLG,EAAgB,GACdC,EAAS9I,EACEyF,MACAC,MAFF,UAEWhB,EAAQiB,IAFnB,YAE0BC,gBAzBhC,UA0BckD,EAAOjD,UAAU6C,EAAU,YA1BzC,eA0BH5C,EA1BG,iBA2BaA,EAASL,IAAIM,iBA3B1B,eA2BT8C,EA3BS,iBA8BHnE,EAAQkE,cAAR,2BACClE,GADD,IAEFgE,SAAUG,KAhCL,QAkCTV,IACAQ,EAAYE,GAnCH,iCAsCNvH,MAAM,mGAtCA,4CAAH,sDA0Dd,OACI,sBAAKI,UAAU,YAAf,UACKgH,EACG,qBAAKhH,UAAU,eAAeqH,IAAI,wCAAU1E,IAAKqE,IAE7C,qBAAKhH,UAAU,0BAAf,SACI,cAAC,IAAD,CAAiBY,KAAM0G,IAAcvG,KAAK,SAGtD,uBAAMtB,SAAUA,EAAUO,UAAU,cAApC,UACI,wBAAOuH,QAAQ,aAAavH,UAAU,iBAAtC,UACI,yEACA,cAAC,IAAD,CAAiBY,KAAMkE,SAE3B,uBACI9C,GAAG,aACH/B,KAAK,OACL8E,OAAO,UACP3F,SAnCK,SAACC,GAAW,IAIvB2F,EADF3F,EADAC,OAAU2F,MAEQ,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAAmB,IAEdC,EACjBD,EADAE,cAAiBD,OAErB2B,EAAY3B,IAEZ/B,QAAQyB,IACRE,EAAOM,cAAcR,IAuBbhE,MAAO,CAAEyE,QAAS,KAEtB,uBACIxF,KAAK,OACLC,YAAawG,EACblH,MAAOsH,EACP1H,SA1FC,SAACC,GAAW,IAEXG,EACVH,EADAC,OAAUE,MAEduH,EAAkBvH,IAuFNQ,UAAU,cAEd,uBACIC,KAAK,SACLT,MAAM,8CACNQ,UAAU,UACVgB,MAAO,CAAEwF,UAAW,SAG5B,sBAAMxG,UAAU,2BAA2BI,QAzG7B,WAClBlC,EAAYsJ,UACZb,EAAQc,KAAK,MAuGT,2CCxFGC,EA3BI,SAAC,GAAD,EAAG1E,QAAH,OAAiB,8BAChC,qBAAIhD,UAAU,iBAAd,UACI,6BACI,cAAC,IAAD,CAAM2H,GAAG,IAAI3G,MAAO,CAAE4G,WAAY,IAAlC,SAEI,cAAC,IAAD,CAAiBhH,KAAMC,IAAWC,MAAO,UAAWC,KAAK,WAIjE,6BACI,eAAC,IAAD,CACI4G,GAAG,WACH3G,MAAO,CAAE4G,WAAY,GACjBC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,SAAU,IANlB,UASI,cAAC,IAAD,CAAiBpH,KAAMqH,IAAQnH,MAAO,UAAWC,KAAK,OACtD,sBAAMC,MAAO,CAAEwF,UAAW,IAA1B,2CCQD0B,EA3BG,SAAC,GAA0C,IAAxCzB,EAAuC,EAAvCA,YAAa0B,EAA0B,EAA1BA,WAAYnF,EAAc,EAAdA,QAG1C,OAFAX,QAAQwD,KAAK,gDAGT,eAAC,IAAD,WACKsC,GAAc,cAAC,EAAD,CAAYnF,QAASA,IACpC,cAAC,IAAD,UACKmF,EACG,sBAAKnI,UAAU,oBAAf,UACI,cAAC,IAAD,CAAOoI,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAMrF,QAASA,MAEnB,cAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,WAAlB,SACI,cAACC,EAAD,CAAStF,QAASA,EAASyD,YAAaA,SAI5C,mCACI,cAAC,IAAD,CAAO2B,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,cCoBjBE,MA1Cf,WAAgB,IAAD,EACW9J,oBAAS,GADpB,mBACN+J,EADM,KACAC,EADA,OAEiBhK,mBAAS,MAF1B,mBAENuE,EAFM,KAEG0F,EAFH,KA4Bb,OAzBA1C,qBAAU,WACR9H,EAAYyK,oBAAmB,SAACC,GAE5BF,EADEE,EACS,CACT/B,YAAa+B,EAAK/B,YAClB5C,IAAK2E,EAAK3E,IACViD,cAAe,SAAC2B,GAAD,OAAUD,EAAK1B,cAAc2B,KAGnC,MAEbJ,GAAQ,QAET,IAaD,sBAAKzI,UAAU,iBAAf,UACGwI,EACC,cAAC,EAAD,CACE/B,YAdY,WAClB,IAAMmC,EAAO1K,EAAY4K,YACzBJ,EAAW,CACT7B,YAAa+B,EAAK/B,YAClB5C,IAAK2E,EAAK3E,IACV+C,SAAU4B,EAAK5B,SACfE,cAAe,SAAC2B,GAAD,OAAUD,EAAK1B,cAAc2B,OASxCV,WAAY5E,QAAQP,GACpBA,QAASA,IAET,kBACJ,wDAA4B,IAAIuB,MAAOwE,qB,MCpC7CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.59adca07.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { message } from \"antd\";\r\n\r\n\r\nconst AuthForm = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const { target: { name, value } } = event;\r\n        if (name === \"email\") {\r\n            setEmail(value);\r\n        } else if (name === \"password\") {\r\n            setPassword(value);\r\n        } else if (name === \"passwordConfirm\") {\r\n            setPasswordConfirm(value);\r\n        }\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (newAccount) {\r\n                if (password != passwordConfirm) {\r\n                    return alert(\"비밀번호가 일치하지 않습니다.\");\r\n                }\r\n                await authService.createUserWithEmailAndPassword(email, password);\r\n                return alert(\"계정이 성공적으로 생성되었습니다.\");\r\n            } else {\r\n                await authService.signInWithEmailAndPassword(email, password);\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    };\r\n\r\n    const toggleAccount = () => {\r\n        setError(\"\");\r\n        setNewAccount((prev) => !prev)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name=\"email\" type=\"email\" placeholder=\"E-mail\" required value={email} onChange={onChange} className=\"authInput\" />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\r\n                {\r\n                    newAccount && (\r\n                        <input name=\"passwordConfirm\" type=\"password\" placeholder=\"Password Confirm\" required value={passwordConfirm} onChange={onChange} className=\"authInput\" />\r\n                    )\r\n                }\r\n                <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"회원가입\" : \"로그인\"} />\r\n                {error && <span className=\"authError\">{error}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\" >\r\n                {newAccount ? \"이미 등록된 계정이 있으신가요?\" : \"새로운 계정을 등록하시나요?\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport AuthForm from \"components/AuthForm\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);    // newNweet은 text이다.\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you wnat to delete this nweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n\r\n            /* injun */\r\n            if (nweetObj.attachmentUrl != \"\") {\r\n                //const attachmentRef = storageService.ref().child(`${nweetObj.creatorId}/${nweetObj.}`);\r\n                const attachmentRef = storageService.refFromURL(nweetObj.attachmentUrl);\r\n                // Delete the file\r\n                attachmentRef.delete().then(function () {\r\n                    // File deleted successfully\r\n                    console.log(\"success delete!!!\");\r\n                }).catch(function (error) {\r\n                    // Uh-oh, an error occurred!\r\n                    console.log(\"..? what happend?\");\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value }, } = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n              </span>\r\n                </>\r\n            ) : (\r\n                    <>\r\n                        <h4 className=\"nweet__text\" >{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                            <div class=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { message } from \"antd\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const welcomeMessage = [\r\n        \"오늘 하루 어땠나요?\",\r\n        \"잘 지내고 계시죠?\",\r\n        \"좋은 하루 되세요!\",\r\n        \"만나서 반갑습니다 :)\",\r\n    ];\r\n\r\n    const PLACEHOLDER = Boolean(userObj.displayNmae)\r\n        ? \"프로필에서 이름을 업데이트 후 이용해주세요.\"\r\n        : `${welcomeMessage[Math.floor(Math.random() * welcomeMessage.length)]}`;\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (nweet === \"\") {\r\n            return message.warn(\"입력된 내용이 없습니다.\");\r\n        } else if (Boolean(userObj.displayNmae)) {\r\n            return message.warn(\"프로필에서 이름을 업데이트 후 이용해주세요.\");\r\n        }\r\n\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder={PLACEHOLDER}\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>사진 등록하기</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\nexport default NweetFactory;","import React, { useState, useEffect } from \"react\";\r\nimport { dbService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n    console.info(\"여기는 홈\");\r\n\r\n    const [nweets, setNweets] = useState([]);\r\n    useEffect(() => {\r\n        dbService\r\n            .collection(\"nweets\")\r\n            .orderBy(\"createdAt\", \"desc\")\r\n            .onSnapshot((snapshot) => {\r\n                const nweetArray = snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    ...doc.data(),\r\n                }));\r\n                setNweets(nweetArray);\r\n            });\r\n    }, []);\r\n    return (\r\n        <div className=\"container\">\r\n            <NweetFactory userObj={userObj} />\r\n            \r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                    <Nweet\r\n                        key={nweet.id}\r\n                        nweetObj={nweet}\r\n                        isOwner={nweet.creatorId === userObj.uid}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Home;","import React, { useState } from \"react\";\r\nimport { authService, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faUserCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { message } from \"antd\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    console.info(\"여기는 프로필\");\r\n\r\n    const PLACEHOLDER_NAME = \"이름 또는 닉네임을 입력해주세요.\";\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const [photoURL, setPhotoURL] = useState(userObj.photoURL);\r\n\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if ( !Boolean(newDisplayName) ) {\r\n            return alert(PLACEHOLDER_NAME);\r\n        }\r\n\r\n        if ( (userObj.displayName === newDisplayName) && (photoURL === userObj.photoURL) ) {\r\n            return alert(\"변경된 정보가 없습니다.\");\r\n        }\r\n\r\n        //이름이 수정된 경우, 변경 저장\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                ...userObj,\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n\r\n        //입력된 사진이 등록된 사진과 다른 경우, 변경 저장\r\n        if (Boolean(photoURL) && (photoURL !== userObj.photoURL)) {\r\n            //파일 스토리지 저장\r\n            let profileImgUrl = \"\";\r\n            const imgRef = storageService\r\n                            .ref()\r\n                            .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await imgRef.putString(photoURL, \"data_url\");\r\n            profileImgUrl = await response.ref.getDownloadURL();\r\n\r\n            //사용자 계정 저장\r\n            await userObj.updateProfile({\r\n                ...userObj,\r\n                photoURL: profileImgUrl,\r\n            });\r\n            refreshUser();\r\n            setPhotoURL(profileImgUrl);\r\n        }\r\n\r\n        return alert(\"프로필 정보가 업데이트 되었습니다.\");\r\n    };\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setPhotoURL(result);\r\n        };\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {photoURL ? (\r\n                <img className=\"profile__img\" alt=\"프로필 이미지\" src={photoURL} />\r\n            ) : (\r\n                    <div className=\"profile__img__container\">\r\n                        <FontAwesomeIcon icon={faUserCircle} size=\"6x\" />\r\n                    </div>\r\n                )}\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <label htmlFor=\"image-file\" className=\"profile__label\">\r\n                    <span>프로필 이미지</span>\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                </label>\r\n                <input\r\n                    id=\"image-file\"\r\n                    type=\"file\"\r\n                    accept=\"image/*\"\r\n                    onChange={onFileChange}\r\n                    style={{ opacity: 0 }}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder={PLACEHOLDER_NAME}\r\n                    value={newDisplayName}\r\n                    onChange={onChange}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"프로필 업데이트\"\r\n                    className=\"formBtn\"\r\n                    style={{ marginTop: 10 }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                로그 아웃\r\n             </span>\r\n        </div>\r\n    );\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => <nav>\r\n    <ul className=\"nav__container\">\r\n        <li>\r\n            <Link to=\"/\" style={{ marginLeft: 10\r\n                }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                \r\n            </Link>\r\n        </li>\r\n        <li>\r\n            <Link\r\n                to=\"/profile\"\r\n                style={{ marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                }}\r\n            >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    프로필\r\n                </span>\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n</nav>;\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Profile from \"routes/Profile\";\r\nimport Navigation from \"components/Navigation\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n    console.info(\"여기는 앱 라우터\");\r\n\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                    <div className=\"router__container\">\r\n                        <Route exact path=\"/\">\r\n                            <Home userObj={userObj} />\r\n                        </Route>\r\n                        <Route exact path=\"/profile\">\r\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                        </Route>\r\n                    </div>\r\n                ) : (\r\n                        <>\r\n                            <Route exact path=\"/\">\r\n                                <Auth />\r\n                            </Route>\r\n                        </>\r\n                    )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    })\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      photoURL: user.photoURL,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <div className=\"app__container\">\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : \"Initializing...\"}\n      <footer>&copy; Injun Jeong {new Date().getFullYear()}</footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}