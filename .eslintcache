[{"C:\\dev\\react\\nwitter\\src\\index.js":"1","C:\\dev\\react\\nwitter\\src\\components\\App.js":"2","C:\\dev\\react\\nwitter\\src\\routes\\Home.js":"3","C:\\dev\\react\\nwitter\\src\\components\\Router.js":"4","C:\\dev\\react\\nwitter\\src\\routes\\Auth.js":"5","C:\\dev\\react\\nwitter\\src\\fbase.js":"6","C:\\dev\\react\\nwitter\\src\\components\\Navigation.js":"7","C:\\dev\\react\\nwitter\\src\\routes\\Profile.js":"8","C:\\dev\\react\\nwitter\\src\\components\\Nweet.js":"9","C:\\dev\\react\\nwitter\\src\\components\\NweetFactory.js":"10","C:\\dev\\react\\nwitter\\src\\components\\AuthForm.js":"11"},{"size":228,"mtime":1612631787695,"results":"12","hashOfConfig":"13"},{"size":1012,"mtime":1612629372084,"results":"14","hashOfConfig":"13"},{"size":1165,"mtime":1612633997917,"results":"15","hashOfConfig":"13"},{"size":1563,"mtime":1612633257201,"results":"16","hashOfConfig":"13"},{"size":1324,"mtime":1612631816611,"results":"17","hashOfConfig":"13"},{"size":697,"mtime":1612449688726,"results":"18","hashOfConfig":"13"},{"size":1289,"mtime":1612633759925,"results":"19","hashOfConfig":"13"},{"size":1694,"mtime":1612633791861,"results":"20","hashOfConfig":"13"},{"size":3350,"mtime":1612635982523,"results":"21","hashOfConfig":"13"},{"size":3452,"mtime":1612631722212,"results":"22","hashOfConfig":"13"},{"size":1694,"mtime":1612630507495,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1k1qlh0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\dev\\react\\nwitter\\src\\index.js",[],["53","54"],"C:\\dev\\react\\nwitter\\src\\components\\App.js",[],["55","56"],"C:\\dev\\react\\nwitter\\src\\routes\\Home.js",[],"C:\\dev\\react\\nwitter\\src\\components\\Router.js",[],["57","58"],"C:\\dev\\react\\nwitter\\src\\routes\\Auth.js",[],"C:\\dev\\react\\nwitter\\src\\fbase.js",[],["59","60"],"C:\\dev\\react\\nwitter\\src\\components\\Navigation.js",[],"C:\\dev\\react\\nwitter\\src\\routes\\Profile.js",["61"],"import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n    console.info(\"여기는 프로필\");\r\n\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n    const onLogOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n            refreshUser();\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    autoFocus\r\n                    placeholder=\"Display name\"\r\n                    value={newDisplayName}\r\n                    className=\"formInput\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Update Profile\"\r\n                    className=\"formBtn\"\r\n                    style={{\r\n                        marginTop: 10,\r\n                    }}\r\n                />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n                Log Out\r\n      </span>\r\n        </div>\r\n    );\r\n};","C:\\dev\\react\\nwitter\\src\\components\\Nweet.js",["62","63"],"import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);    // newNweet은 text이다.\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm(\"Are you sure you wnat to delete this nweet?\");\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n\r\n            /* injun */\r\n            if (nweetObj.attachmentUrl != \"\") {\r\n                //const attachmentRef = storageService.ref().child(`${nweetObj.creatorId}/${nweetObj.}`);\r\n                const attachmentRef = storageService.refFromURL(nweetObj.attachmentUrl);\r\n                // Delete the file\r\n                attachmentRef.delete().then(function () {\r\n                    // File deleted successfully\r\n                    console.log(\"success delete!!!\");\r\n                }).catch(function (error) {\r\n                    // Uh-oh, an error occurred!\r\n                    console.log(\"..? what happend?\");\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet,\r\n        });\r\n        setEditing(false);\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        const { target: { value }, } = event;\r\n        setNewNweet(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {editing ? (\r\n                <>\r\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Edit your nweet\"\r\n                            value={newNweet}\r\n                            required\r\n                            autoFocus\r\n                            onChange={onChange}\r\n                            className=\"formInput\"\r\n                        />\r\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n              </span>\r\n                </>\r\n            ) : (\r\n                    <>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                            <div class=\"nweet__actions\">\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                    </>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","C:\\dev\\react\\nwitter\\src\\components\\NweetFactory.js",["64"],"import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (nweet === \"\") {\r\n            return;\r\n        }\r\n        let attachmentUrl = \"\";\r\n        if (attachment !== \"\") {\r\n            const attachmentRef = storageService\r\n                .ref()\r\n                .child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl,\r\n        };\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n    };\r\n    const onChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setNweet(value);\r\n    };\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target: { files },\r\n        } = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {\r\n                currentTarget: { result },\r\n            } = finishedEvent;\r\n            setAttachment(result);\r\n        };\r\n        if (Boolean(theFile)) {\r\n            reader.readAsDataURL(theFile);\r\n        }\r\n    };\r\n    const onClearAttachment = () => setAttachment(\"\");\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input\r\n                    className=\"factoryInput__input\"\r\n                    value={nweet}\r\n                    onChange={onChange}\r\n                    type=\"text\"\r\n                    placeholder=\"What's on your mind?\"\r\n                    maxLength={120}\r\n                />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input\r\n                id=\"attach-file\"\r\n                type=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={onFileChange}\r\n                style={{\r\n                    opacity: 0,\r\n                }}\r\n            />\r\n            {attachment && (\r\n                <div className=\"factoryForm__attachment\">\r\n                    <img\r\n                        src={attachment}\r\n                        style={{\r\n                            backgroundImage: attachment,\r\n                        }}\r\n                    />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\nexport default NweetFactory;","C:\\dev\\react\\nwitter\\src\\components\\AuthForm.js",["65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"66","replacedBy":"70"},{"ruleId":"68","replacedBy":"71"},{"ruleId":"66","replacedBy":"72"},{"ruleId":"68","replacedBy":"73"},{"ruleId":"66","replacedBy":"74"},{"ruleId":"68","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":5,"column":1,"nodeType":"78","endLine":54,"endColumn":3},{"ruleId":"79","severity":1,"message":"80","line":17,"column":40,"nodeType":"81","messageId":"82","endLine":17,"endColumn":42},{"ruleId":"83","severity":1,"message":"84","line":70,"column":52,"nodeType":"85","endLine":70,"endColumn":88},{"ruleId":"83","severity":1,"message":"84","line":84,"column":21,"nodeType":"85","endLine":89,"endColumn":23},{"ruleId":"86","severity":1,"message":"87","line":27,"column":17,"nodeType":"88","messageId":"89","endLine":27,"endColumn":21},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],["90"],["91"],["90"],["91"],["90"],["91"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]